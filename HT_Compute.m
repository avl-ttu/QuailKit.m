function handles=HT_Compute(handles)
handles.Data.Audio=audioplayer(handles.Data.TS.Data(...
    handles.Data.Edges(handles.Data.j):...
    handles.Data.Edges(handles.Data.j+1),1),handles.Data.fs); %workaround
handles.Data.Audio.TimerFcn={@TimerFcn, handles};
handles.Data.Audio.TimerPeriod=0.05;
handles.Data.F=handles.UserData.Freq(1):10:handles.UserData.Freq(2);
n=round(0.1*handles.Four_List.UserData{handles.Four_Pop.Value}{2,4}*handles.Data.fs);
Mics=handles.Two_Pop.UserData{2,2};
activeMics=find([Mics{:,2}]);
for k=activeMics
        if handles.Five_Pop.Value>1
            Template=importdata('Template_291.mat');
            Calls = SH_FindCalls(...
                handles.Data.TS.Data(handles.Data.Edges(handles.Data.j):...
                handles.Data.Edges(handles.Data.j+1),k),...
                handles.Data.F,handles.Data.fs,...
                handles.Data.TS.Time(handles.Data.Edges(handles.Data.j)),...
                n,Template,...
                handles.Five_List.UserData{3,2},...
                handles.Five_List.UserData{2,2},...
                handles.Five_List.UserData{4,2},...
                [handles.Graphics.Surf(2,k,1),...
                handles.Graphics.Surf(2,k,2),...
                handles.Graphics.Plot(3,k,1),...
                handles.Graphics.Plot(3,k,1),...
                handles.Graphics.Scatter(3,k,2),...
                handles.Graphics.Line(3,k)]);
            l=size(Calls,1);
            for i = 1:l
                HT_DataAccess(handles,'query',...
                    ['INSERT INTO [Detection(s)] ([Recording ID], [Start], [End], [LF], [HF]) ',...
                     'VALUES (',char(string(Mics{k,4})),...
                     ', ',char(string(Calls(i,1))),', ',char(string(Calls(i,2))),...
                     ', ',char(string(Calls(i,3))),', ',char(string(Calls(i,4))),')'],'cellarray');
            end
        elseif handles.Four_Pop.Value>1
            flag=false;
            if handles.Mode.UserData==2
                try
                    temp=load([handles.Path.Results,'Spectrograms/',...
                        handles.Data.Date,'/',handles.Data.Date,...
                        num2str(handles.Data.TS.Time(handles.Data.Edges(handles.Data.j),:,k),...
                        '_%07.2f'),'.mat'],'F','S','t(k,:)');
                    handles.Data.F=temp.F;
                    handles.Data.S(:,:,k)=temp.S;
                    handles.Data.t(k,:)=temp.t(k,:);
                catch
                    warning('Nothing to load. Computing...');
                    flag=true;
                end
            end
            if flag || handles.Mode.UserData<2
                [handles.Data.S(:,:,k),handles.Data.t(k,:)]=HT_Spectrogram(...
                    handles.Data.TS.Data(handles.Data.Edges(handles.Data.j):...
                    handles.Data.Edges(handles.Data.j+1),k),n,...
                    handles.Data.F,...
                    handles.Data.fs,...
                    handles.Data.TS.Time(handles.Data.Edges(handles.Data.j)),...
                    handles.Graphics.Surf(2,k,1));
            end
        end
%         Ann = HT_DataAccess(handles,'query',...
%                     ['SELECT * ',...
%                      'FROM Annotations ',...
%                      'WHERE [DateTime] = #', handles.Data.Date,'#',...
%                      ' AND [Channel ID] IN (',sprintf('%d, ',Mics{[Mics{:,2}],1}),')',...
%                      ' AND [Start Time] >=', char(string(handles.Data.t(k,1))),...
%                      ' AND [End Time] <=', char(string(handles.Data.t(k,end))),...
%                      ' AND [Created By] = ''23'''],'table');
%         HT_BBPlot(handles.Data.t(k,:),handles.Data.F,handles.Data.S(:,:,k),...
%             Ann,handles.Graphics.Surf(2,k,2),[0,0,0],...
%             handles.Five_Pop.Value==1);
end
HT_DataAccess(handles,'write');

function TimerFcn(audio,~,handles)
set(handles.Graphics.Line(1:2),'XData',handles.Data.TS.Time(handles.Data.Edges(handles.Data.j)+...
    audio.CurrentSample*[1,1]));
guidata(handles.Fig,handles);